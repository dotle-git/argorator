#!/bin/bash
# Argorator Development Setup Script

set -e  # Exit on any error

echo "üöÄ Setting up Argorator development environment..."

# Check if Python 3 is available
if ! command -v python3 &> /dev/null; then
    echo "‚ùå Python 3 is not installed. Please install Python 3.9 or later."
    exit 1
fi

# Check Python version
PYTHON_VERSION=$(python3 -c "import sys; print(f'{sys.version_info.major}.{sys.version_info.minor}')")
REQUIRED_VERSION="3.9"

if [ "$(printf '%s\n' "$REQUIRED_VERSION" "$PYTHON_VERSION" | sort -V | head -n1)" != "$REQUIRED_VERSION" ]; then
    echo "‚ùå Python $REQUIRED_VERSION or later is required. Found: $PYTHON_VERSION"
    exit 1
fi

echo "‚úÖ Python $PYTHON_VERSION detected"

# Check if pip is available
if ! command -v pip3 &> /dev/null; then
    echo "‚ùå pip3 is not installed. Please install pip."
    exit 1
fi

echo "‚úÖ pip3 is available"

# Install dependencies
echo "üì¶ Installing dependencies..."

# Try to install with --break-system-packages if needed
if pip3 install -e .[dev] --break-system-packages 2>/dev/null; then
    echo "‚úÖ Dependencies installed successfully"
elif pip3 install -e .[dev]; then
    echo "‚úÖ Dependencies installed successfully"
else
    echo "‚ùå Failed to install dependencies"
    echo "üí° Try running: pip3 install -e .[dev] --break-system-packages"
    exit 1
fi

# Verify installation
echo "üß™ Verifying installation..."

# Test imports
if python3 -c "import argorator; print('‚úÖ Argorator imports successfully')" 2>/dev/null; then
    echo "‚úÖ Package imports work"
else
    echo "‚ùå Package import failed"
    exit 1
fi

# Run tests
echo "üß™ Running tests..."
if PYTHONPATH=/workspace/src python3 -m pytest tests/ -q; then
    echo "‚úÖ All tests pass"
else
    echo "‚ö†Ô∏è  Some tests failed, but dependencies are installed"
fi

echo ""
echo "üéâ Setup completed successfully!"
echo ""
echo "Next steps:"
echo "  ‚Ä¢ Run tests: PYTHONPATH=/workspace/src python3 -m pytest tests/"
echo "  ‚Ä¢ Run with coverage: PYTHONPATH=/workspace/src python3 -m pytest tests/ --cov=src/argorator"
echo "  ‚Ä¢ Format code: black src/ tests/"
echo "  ‚Ä¢ Lint code: flake8 src/ tests/"
echo ""
echo "Or use the Makefile:"
echo "  ‚Ä¢ make test"
echo "  ‚Ä¢ make test-coverage"
echo "  ‚Ä¢ make format"
echo "  ‚Ä¢ make lint"